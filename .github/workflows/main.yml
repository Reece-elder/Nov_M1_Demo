# This is an IDE for creating a workflow with .yaml
# Workflows are processes or commands you want to run when a certain thing happens

# When code is pushed to this repo (on this branch) Print out to the console "Code Pushed"

# Workflows creates a linux instance for us and runs the specified commands 

name: GitActions Demo

# Do these actions when we push to this branch
on: [push]

# Environment variables - Placeholders for data you can use
# within the environment (our Ubuntu runners)
# Global / Workflow - Accessible across ALL jobs
# Job - Only Accessible for this job / runner
# Secret vars - Accessible everywhere, but not defined in the file

# We can access this with echo $GLOBAL_VAR
env: 
  GLOBAL_VAR: "This is Globally available!"
  # PASSWORD: "secret123" This is bad, don't do this! Use Secret instead
  # SECRET_TEXT_ENV: ${{secrets.SECRET_TEXT}}
  # echo $SECRET_TEXT_ENV

# What jobs you wish the server to do
jobs:

  env_job:
    runs-on: ubuntu-latest
    # To create a variable local to this job
    env:
      LOCAL_VAR: "This is locally available"
    steps:
    - name: Running global variable
      run: echo $GLOBAL_VAR
    - name: Running local variable
      run: echo $LOCAL_VAR
    - name: Running Secret Var
      run: echo "${{secrets.SECRET_TEXT}}"

  # What is the name of the job
  demo_job:
    # What type of instance is this job running on, linux distribution 
    runs-on: ubuntu-latest
    # What are we wanting our ubuntu machine to do
    steps: 
    # echo outputs some text, by default this is to the terminal but can also add text to a file
    - run: echo 'Hello World!'
    - run: echo 'Running on ${{runner.os}}' # Our runner has inbuilt variables we can access
  
  exercise_job:
    runs-on: ubuntu-latest
    steps:
    - run: echo 'Hello World'
    - run: pwd
    - run: ls -a
    - run: echo 'Commit message ${{ github.event.head_commit.message }}'
    - run: echo 'job name ${{ github.job }}'
    
  clone_job:
    runs-on: ubuntu-latest
    steps:
    - run: ls -a
    - name: Checkout
      uses: actions/checkout@v2.5.0 # Default repo to clone down / checkout is our one
    - run: echo '${{github.repository}}'
    - run: ls -a
    # Command to print out the contents of a file
    - run: cat file1.txt
    - run: echo "This is new text" >> file1.txt
    - run: cat file1.txt
    - run: python hello.py
    
  print_job:
    runs-on: ubuntu-latest
    steps:
    - run: ls -a

  build_job:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.5.0
    # Add permission to Github to execute our script
    - run: chmod +x scripts/build.sh # Changing the modifiers and adding executable permission with this user
    - run: ./scripts/build.sh

# When the jobs run, they run semi randomly, often you require them to run in order
# Build -> Test -> Check Results -> Cleanup -> Deploy
# needs command, needs: <job name> and this job wont run until the specified job completes

  job1: 
    runs-on: ubuntu-latest
    needs: build_job
    steps:
    - run: echo "Job started!"
    - run: sleep 5
    - run: ./not_real_script.sh

  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
    - run: echo "Job 2 started!"

    
    
